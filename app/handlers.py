from aiogram import Router, F, Bot
from aiogram.types import Message
import app.keyboards as kb
from functions.registration import user_registration
#from functions.parsing import parsing #–î–æ–¥–µ–ª–∞—Ç—å
from dotenv import load_dotenv
import asyncio
import os

load_dotenv()
router = Router()

bot = Bot(os.getenv('TOKEN'))

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(F.text == '/start')
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç. –Ø WebMail –±–æ—Ç, –∫ –í–∞—à–∏–º —É—Å–ª—É–≥–∞–º! –î–ª—è —Ä–µ–≥–∏—Å—Ç–∞—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üìù' ", reply_markup=kb.registration)

@router.message(F.text.lower() == "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üìù") #–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å
async def registration(message: Message):
    msg = user_registration(str(message.from_user.id))
    await message.answer(msg)

# @router.message(F.text.lower() == "–Ω–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É üü¢") #–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å
# async def start(message: Message):
#     await message.answer("–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å–µ–º –Ω–∞—á–∞–ª–∞—Å—å!")
#     global stop_flag
#     while not stop_flag: 
#         parsing() #–î–æ–¥–µ–ª–∞—Ç—å
#         await asyncio.sleep(60)
    
@router.message(F.text.lower() == "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É üî¥")
async def stop(message: Message):
    global stop_flag
    stop_flag = True
    await message.answer("–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å–µ–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

@router.message(F.text.lower() == "—Å–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚öôÔ∏è")
async def change(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.") #–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å

@router.message(F.text.lower() == "–∞–≤—Ç–æ—Ä—ã üëë")
async def authors(message: Message):
    await message.answer("<b>–ê–≤—Ç–æ—Ä—ã —ç—Ç–æ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞:</b>\n@CookieRevolution –∏ @JaNoK25", parse_mode='HTML')